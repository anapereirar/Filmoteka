{"mappings":"sgBAAA,MAGMA,EACM,qBADNA,EAIG,kBAEHC,EACOC,eAAeC,EAAO,GAC/B,IACE,MAAMC,EAAM,+BAAcJ,6CAAyCA,UAAyBG,IACtFE,QAAiBC,MAAMF,GACvBG,QAAeF,EAASG,OAE9B,OADAC,QAAQC,IAAIH,GACLA,EAAOI,O,CACd,MAAOC,GACPH,QAAQC,IAAI,oBACZD,QAAQG,MAAMA,E,GAMdC,EAAY,CAChB,GAAI,YACJ,GAAI,UACJ,GAAI,YACJ,GAAI,QACJ,GAAI,SACJ,GAAI,SACJ,GAAI,SACJ,GAAI,UACJ,GAAI,UACJ,GAAI,WACJ,GAAI,QACJ,GAAI,cACJ,IAAK,kBACL,KAAM,UACN,MAAO,QACP,MAAO,UACP,MAAO,SACP,MAAO,MACP,MAAO,YAsBT,IAAIC,EAAc,EACdC,EAAS,GACb,MAAMC,EAAcC,SAASC,cAAc,eAGrCC,EAAc,CAClBC,aAAc,SAAUb,GACtBQ,GAAUR,EACPc,KAAI,EAACC,YAAEA,EAAWC,eAAEA,EAAcC,aAAEA,EAAYC,UAAEA,KAC1C,2IACsDH,gHAC9BC,+CA9BvC,SAAiBG,GAEf,MAAMC,EAAMD,EAAME,OAClB,GAAY,IAARD,EAAW,MAAO,GAEtB,IAAIE,EAAI,GACR,IAAK,IAAIC,EAAI,EAAGA,EAAIC,KAAKC,IAAI,EAAGL,GAAMG,GAAK,EACzCD,EAAEI,MAOWC,EAPER,EAAMI,GAQhBjB,EAAUqB,IAAO,iBAAiBA,OAD3C,IAAiBA,EAHf,OAFIP,EAAM,GAAGE,EAAEI,KAAK,SAEbJ,EAAEM,KAAK,K,CAoBsBC,CAAQX,kCAA0CD,oCAGjFW,KAAK,IACRnB,EAAYqB,UAAYtB,C,EAE1BuB,iBAAkBpC,iBAChB,MAAMK,QAAeN,EAAmBa,GACxC,OAAOyB,KAAKnB,aAAab,E,GAI7BY,EAAYmB,mBAKZ,MAAME,EAAQvB,SAASC,cAAc,oBAKrC,SAAiBuB,EAAYC,GAC3B,IACIC,EADAC,EAAQ,GAERC,EAAcH,EAAO,EACrBI,EAAaJ,EAAO,EACpBA,EAAO,IACTE,GAAS,qDAAqDF,EAAO,+DAGnEA,EAAO,IACTE,GAAS,wEACLF,EAAO,IACTE,GAAS,2CAIVF,GAAMD,EACPI,GAA4B,EACrBH,GAAMD,EAAY,IACzBI,GAA4B,GAGrB,GAANH,EACDI,GAA0B,EACb,GAANJ,IACPI,GAA0B,GAG5B,IAAK,IAAIC,EAAaF,EAAaE,GAAcD,EAAYC,IACxDA,EAAaN,IAGC,GAAdM,IACCA,GAA0B,GAG5BJ,EADED,GAAQK,EACC,SAEA,GAEbH,GAAS,mBAAmBD,mCAA0CI,aAAsBA,iBAG1FL,EAAOD,EAAa,IAClBC,EAAOD,EAAa,IACtBG,GAAS,0CAEXA,GAAS,iDAAiDH,aAAsBA,iBAG9EC,EAAOD,IACTG,GAAS,qDAAqDF,EAAO,gEAEvEF,EAAMH,UAAYO,C,CAGpBI,CA3DiB,IACN,GA4DU/B,SAASgC,iBAAiB,YAE/CT,EAAMU,iBAAiB,SAAUC,IAE/B,GADApC,EAAO,GACkB,OAArBoC,EAAEC,OAAOC,SAAyC,SAArBF,EAAEC,OAAOC,QAAoB,CAC5D,MAAMC,EAAgBrC,SAASC,cAAc,aAC7C,GAAIoC,EAAe,CACjB,MAAMC,EAAcD,EAAcE,UAClC1C,EAAcyC,EACd9C,QAAQC,IAAII,GACZL,QAAQC,IAAI6C,GACZpC,EAAYmB,kB","sources":["src/components/body.js"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '2e9f8fc9479fa19131d9c8fc8ea7c110';\n\nconst categories = {\n  trending: '/trending/all/week',\n  querySearch: '/search/movie',\n  genre: '/genre/movie/list',\n  basic: '&language=en-US',\n};\nconst services = {\n  getMovies: async function(page = 1) {\n    try {\n      const url = `${BASE_URL}${categories.trending}?api_key=${API_KEY}${categories.basic}&page=${page}`;\n      const response = await fetch(url);\n      const movies = await response.json();\n      console.log(movies)\n      return movies.results;\n    } catch (error) {\n      console.log('hola desde error');\n      console.error(error);\n    }\n  }\n};\n\n\nconst genresAll = {\n  12: 'Adventure',\n  14: 'Fantasy',\n  16: 'Animation',\n  18: 'Drama',\n  27: 'Horror',\n  28: 'Action',\n  35: 'Comedy',\n  36: 'History',\n  37: 'Western',\n  53: 'Thriller',\n  80: 'Crime',\n  99: 'Documentary',\n  878: 'Science Fiction',\n  9648: 'Mystery',\n  10402: 'Music',\n  10749: 'Romance',\n  10751: 'Family',\n  10752: 'War',\n  10770: 'TV Movie',\n};\n\nfunction getSome(idArr) {\n\n  const len = idArr.length;\n  if (len === 0) return '';\n\n  let n = [];\n  for (let i = 0; i < Math.min(2, len); i += 1) {\n    n.push(getName(idArr[i]));\n  }\n  if (len > 2) n.push('Other');\n\n  return n.join(', ');\n}\n\nfunction getName(id) {\n  return genresAll[id] || `Unknown genre(${id})`;\n}\n\n\nlet currentPage = 1;\nlet markup = '';\nconst cardsMovies = document.querySelector('.cardsMovie');\nconst baseImageUrl = 'https://image.tmdb.org/t/p/';\n\nconst layoutUtils = {\n  renderImages: function (movies) {\n    markup += movies\n      .map(({ poster_path, original_title, release_date, genre_ids}) => {\n        return `<li class=\"movie-card\" onclick=\"addModalPoster(event)\">\n            <img class='cardsMovie__image' src='${baseImageUrl}w500${poster_path}' alt='image movie' data-toggle=\"modal\" data-target=\"#posterModal\" />\n            <h2 class=\"movie__title\">${original_title}</h2>\n            <p class=\"movie__genre\">${getSome(genre_ids)}<span class=\"movie__popular\">${release_date}</span></p>\n            </li>`;\n      })\n      .join('');\n    cardsMovies.innerHTML = markup;\n  },\n  refreshMovieList: async function () {\n    const movies = await services.getMovies(currentPage);\n    return this.renderImages(movies);\n  },\n};\n\nlayoutUtils.refreshMovieList();\n\n\n\n\nconst ulTag = document.querySelector('.paginationList');\n\nlet totalPages = 100;\nlet page = 5;\n\nfunction element(totalPages, page) {\n  let liTag = '';\n  let activeLi;\n  let beforePages = page - 1;\n  let afterPages = page + 1;\n  if (page > 1) {\n    liTag += `<li class=\"btn prev\" onclick=\"element(totalPages, ${page - 1})\"><span><i class=\"fas fa-angle-left\"></i>Prev</span></li>`;\n  }\n\n  if (page > 2) {\n    liTag += `<li class=\"numb\" onclick=\"element(totalPages, 1)\"><span>1</span></li>`;\n    if (page > 3) {\n      liTag += `<li class=\"dots\"><span>...</span></li>`;\n    }\n  }\n\n  if(page==totalPages){\n    beforePages = beforePages - 2;\n  }else if(page==totalPages -1){\n    beforePages = beforePages - 1;\n  }\n\n  if(page==1){\n    afterPages = afterPages + 2;\n  }else if(page==2){\n    afterPages = afterPages + 1;\n  }\n\n  for (let pageLength = beforePages; pageLength <= afterPages; pageLength++) {\n    if(pageLength > totalPages){\n        continue;\n    }\n    if(pageLength == 0){\n        pageLength = pageLength + 1;\n    }\n    if (page == pageLength) {\n      activeLi = 'active';\n    } else {\n      activeLi = '';\n    }\n    liTag += `<li class=\"numb ${activeLi}\" onclick=\"element(totalPages, ${pageLength})\"><span>${pageLength}</span></li>`;\n  }\n\n  if (page < totalPages - 1) {\n    if (page < totalPages - 2) {\n      liTag += `<li class=\"dots\"><span>...</span></li>`;\n    }\n    liTag += `<li class=\"numb\" onclick=\"element(totalPages, ${totalPages})\"><span>${totalPages}</span></li>`;\n  }\n\n  if (page < totalPages) {\n    liTag += `<li class=\"btn next\" onclick=\"element(totalPages, ${page + 1})\"><span>Next<i class=\"fas fa-angle-right\"></i></span></li>`;\n  }\n  ulTag.innerHTML = liTag;\n}\n\nelement(totalPages, page);\n\nconst elementLista = document.querySelectorAll(\"li, span\");\n\nulTag.addEventListener(\"click\", (e) => {\n  markup=''\n  if (e.target.tagName === \"LI\" || e.target.tagName === \"SPAN\") {\n    const activeElement = document.querySelector(\"li.active\");\n    if (activeElement) {\n      const activeValue = activeElement.innerText;\n      currentPage = activeValue;\n      console.log(currentPage)\n      console.log(activeValue);\n      layoutUtils.refreshMovieList();\n    }\n  }\n});\n"],"names":["$5dc247100a59b44f$var$categories","$5dc247100a59b44f$var$services","async","page1","url","response","fetch","movies","json","console","log","results","error","$5dc247100a59b44f$var$genresAll","$5dc247100a59b44f$var$currentPage","$5dc247100a59b44f$var$markup","$5dc247100a59b44f$var$cardsMovies","document","querySelector","$5dc247100a59b44f$var$layoutUtils","renderImages","map","poster_path","original_title","release_date","genre_ids","idArr","len","length","n","i","Math","min","push","id","join","$5dc247100a59b44f$var$getSome","innerHTML","refreshMovieList","this","$5dc247100a59b44f$var$ulTag","totalPages1","page2","activeLi","liTag","beforePages","afterPages","pageLength","$5dc247100a59b44f$var$element","querySelectorAll","addEventListener","e","target","tagName","activeElement","activeValue","innerText"],"version":3,"file":"index.0ba744a3.js.map"}